# This file is for local development only
# Please use the image generated by the Dockerfile for production
services:
  # This service is used to build the development image
  # As we are using "depends_on: development" in other services, this service will be built first
  # This way, the image is built once and reused by other services
  development-web:
    image: meower:development-web
    pull_policy: never
    build:
      context: .
      dockerfile: ./web/Dockerfile
      target: development-web

  development-api:
    image: meower:development-api
    pull_policy: never
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: development-api

  web:
    image: meower:development-web
    pull_policy: never
    tty: true
    stop_signal: SIGINT # Graceful shutdown will cleanup the txt files created
    stop_grace_period: 3s
    environment:
      API_ENDPOINT: "api:50051"
      COOKIE_SECRET_KEY: "5TIyDD81Laz/xdxEw2yJVPKdJYyPqxmyONaSVJHs6jY="
      REDIS_URL: "redis://redis:6379"
    ports:
      - "3000:3000"
      - "7331:7331"
    working_dir: /src/web/
    volumes:
      - ./web/:/src/web/
      - ./api/:/src/api/
      - go_modules:/go/pkg/mod/
    depends_on:
      - api
      - development-web
      - javascript
      - redis
      - rustywind
      - tailwind
    command: 'templ generate -v --watch --proxy="http://localhost:3000" --proxybind="0.0.0.0" --open-browser=false --cmd="go run main.go"'

  tailwind:
    image: meower:development-web
    pull_policy: never
    stop_signal: SIGKILL
    working_dir: /src/web/
    volumes:
      - ./web/:/src/web/
    depends_on:
      - development-web
    command: "tailwindcss -i ./static/src/css/main.css -o ./static/public/css/main.css --config ./tailwind.config.js --watch=always"

  javascript:
    image: oven/bun:alpine
    stop_signal: SIGKILL
    working_dir: /src/web/
    volumes:
      - ./web/:/src/web/
    command: "bun run build-js"

  rustywind:
    image: meower:development-web
    pull_policy: never
    stop_signal: SIGKILL
    working_dir: /src/web/
    volumes:
      - ./web/:/src/web/
    depends_on:
      - development-web
    command: "wgo -verbose -file=\\.templ$ rustywind --write views/**/*.templ"

  api:
    image: meower:development-api
    pull_policy: never
    tty: true
    environment:
      DATABASE_URL: "postgres://meower:meower@db:5432/meower?sslmode=disable"
    ports:
      - "50051:50051"
    working_dir: /src/api/
    volumes:
      - ./api/:/src/api/
      - go_modules:/go/pkg/mod/
    healthcheck:
      test: [ "CMD", "grpc-health-probe", "-addr=:50051" ]
      interval: 1s
      timeout: 10s
      retries: 10
    depends_on:
      development-api:
        condition: service_started
      db:
        condition: service_healthy
        restart: true
    command: "wgo -file=.go go run main.go"

  proto:
    image: meower:development-api
    pull_policy: never
    working_dir: /src/
    volumes:
      - ./api/:/src/api/
      - ./scripts/:/src/scripts/
    depends_on:
      - development-api
    command: "wgo -dir ./api/proto -file=.proto ./scripts/generate_protobuf.sh"

  grpcui:
    image: fullstorydev/grpcui:v1.4.3
    ports:
      - "50050:8080"
    depends_on:
      api:
        condition: service_healthy
        restart: true
    command: -plaintext api:50051

  sqlc:
    image: meower:development-api
    pull_policy: never
    tty: true
    working_dir: /src/api/db/
    volumes:
      - ./api/db/:/src/api/db/
      - go_modules:/go/pkg/mod/
    depends_on:
      - development-api
    command: "wgo -file=sqlc.yaml -file=.sql -xfile=.go -dir /src/api/db sqlc generate -f /src/api/db/sqlc.yaml"

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: "meower"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U meower" ]
      interval: 1s
      timeout: 10s
      retries: 10
    volumes:
      - ./api/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  pgweb:
    image: sosedoff/pgweb
    ports:
      - "5430:8081"
    environment:
      PGWEB_DATABASE_URL: "postgres://meower:meower@db:5432/meower?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: "--log-level=ERROR"

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5

volumes:
  go_modules:
