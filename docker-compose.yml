# This file is for local development only
# Please use the image generated by the Dockerfile for production
services:
  # This service is used to build the development image
  # As we are using "depends_on: development" in other services, this service will be built first
  # This way, the image is built once and reused by other services
  development:
    image: meower:development
    pull_policy: never
    build:
      target: development

  web:
    image: meower:development
    pull_policy: never
    tty: true
    restart: always
    environment:
      API_ENDPOINT: "api:50051"
      COOKIE_SECRET_KEY: "5TIyDD81Laz/xdxEw2yJVPKdJYyPqxmyONaSVJHs6jY="
    ports:
      - "3000:3000"
    volumes:
      - ./:/src/
      - go_modules:/go/pkg/mod/
      - /src/node_modules
    depends_on:
      - api
      - development
    command: 'wgo -file=.go -file=.templ -xfile=_templ.go templ generate :: go run ./cmd/web-server/main.go'

  templ:
    image: meower:development
    pull_policy: never
    tty: true
    stop_signal: SIGINT # Graceful shutdown will cleanup the txt files created
    stop_grace_period: 3s
    restart: always
    ports:
      - "7331:7331"
    volumes:
      - ./:/src/
      - go_modules:/go/pkg/mod/
      - /src/node_modules
    depends_on:
      - web
      - development
    command: 'templ generate -v --watch --proxy="http://web:3000" --proxybind="0.0.0.0" --open-browser=false'

  api:
    image: meower:development
    pull_policy: never
    tty: true
    restart: on-failure
    environment:
      DATABASE_URL: "postgres://meower:meower@db:5432/meower?sslmode=disable"
    ports:
      - "50051:50051"
    volumes:
      - ./:/src/
      - go_modules:/go/pkg/mod/
      - /src/node_modules
    healthcheck:
      test: [ "CMD", "grpc-health-probe", "-addr=:50051" ]
      interval: 1s
      timeout: 10s
      retries: 10
    depends_on:
      development:
        condition: service_started
      db:
        condition: service_healthy
        restart: true
    command: "wgo -dir ./internal/pkg/api/* go run ./cmd/api-server/"

  proto:
    image: meower:development
    pull_policy: never
    restart: on-failure
    volumes:
      - ./:/src/
    depends_on:
      - development
    command: "wgo -dir ./api/protobuf -file=.proto ./scripts/generate_protobuf.sh"

  grpcui:
    image: fullstorydev/grpcui:latest
    ports:
      - "50050:8080"
    depends_on:
      api:
        condition: service_healthy
        restart: true
    command: -plaintext api:50051

  sqlc:
    image: meower:development
    pull_policy: never
    tty: true
    restart: always
    volumes:
      - ./:/src/
      - go_modules:/go/pkg/mod/
      - /src/node_modules
    depends_on:
      - development
    command: "wgo -file=sqlc.yaml -file=.sql -xfile=.go -dir ./internal/db sqlc generate -f /src/internal/db/sqlc.yaml"

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: "meower"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U meower" ]
      interval: 1s
      timeout: 10s
      retries: 10
    volumes:
      - ./internal/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  pgweb:
    image: sosedoff/pgweb
    ports:
      - "5430:8081"
    environment:
      PGWEB_DATABASE_URL: "postgres://meower:meower@db:5432/meower?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: "--log-level=ERROR"

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  tailwind:
    image: meower:development
    pull_policy: never
    restart: on-failure
    stop_signal: SIGKILL
    volumes:
      - ./:/src/
      - /src/node_modules
    depends_on:
      - development
    command: [ "/usr/local/bin/tailwindcss", "-i", "/src/internal/web/static/src/css/main.css", "-o", "/src/internal/web/static/public/css/main.css", "--watch=always", "--content", "/src/internal/web/views/**/*.templ", "/src/internal/web/static/src/css/**.css" ]

volumes:
  go_modules:
